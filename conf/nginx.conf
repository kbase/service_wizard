
user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;



events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;



server {
        #listen   80; ## listen for ipv4; this line is default and implied
        #listen   [::]:80 default ipv6only=on; ## listen for ipv6

        root /kb/deployment;
        index home.html home.shtml;

        # Make site accessible from http://localhost/
       server_name   docker02.berkeley.kbase.us:8880;

        # Setup a DNS Resolver
        resolver 8.8.8.8;
        return       301 https://docker02.berkeley.kbase.us:7443$request_uri;

}

# HTTPS server
#
server {
       listen 443;
       server_name cidynserv.kbase.us docker02.berkeley.kbase.us docker02.berkeley.kbase.us:7443 localhost;

        # this resolver is the internal rancher resolver
        resolver 169.254.169.250;

        # taken from next-www
        client_max_body_size 100000m;
        client_body_temp_path  /tmp 1 2;
        proxy_max_temp_file_size 0;
        proxy_headers_hash_max_size 4096;
        proxy_headers_hash_bucket_size 4096;
        # added kkeller 30sep2015 for kbase-2777
        proxy_request_buffering off;

       ssl on;
# kkeller mod 01 aug 2014
# use the chained cert made by
# cat server.crt gd_bundle-g1-g2.crt > server.chained.crt
# see http://nginx.org/en/docs/http/configuring_https_servers.html#chains
#       ssl_certificate ssl/server.crt;
       ssl_certificate ssl/fullchain.pem;
       ssl_certificate_key ssl/privkey.pem;

       ssl_session_timeout 5m;

       ssl_protocols TLSv1;
       ssl_ciphers ALL:!ADH:!EXPORT56:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv3:+EXP;
       ssl_prefer_server_ciphers on;

# let's use port 5000 for default port initially
# need regex match in order to get $1
        location ~ /dynserv/(.+) {
            proxy_pass http://$1:5000/;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

      location / {
          proxy_set_header Host $host;
          proxy_set_header X-Forwarded-Proto $scheme;
          proxy_set_header X-Forwarded-Port $server_port;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_pass http://10.58.0.173:8080;
          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          # This allows the ability for the execute shell window to remain open for up to 15 minutes. Without this parameter, the default is 1 minute and will automatically close.
          proxy_read_timeout 900s;
      }
    }
}
